import discord

# ID —Ä–æ–ª–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
ROLE_IDS = {
    "Support": [1358082179581870141, 1358087527096913980],
    "Moderator": [1358087527096913980, 1358081072809906217],
    "Eventer": [1358087527096913980, 1358082214004396102],
}

class StaffApplicationView(discord.ui.View):
    def __init__(self, applicant_id=None, category=None):
        """
        View –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∑–∞—è–≤–∫–∞–º–∏. 
        –ï—Å–ª–∏ applicant_id –∏ category –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, View –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –∑–∞—è–≤–æ–∫.
        """
        super().__init__(timeout=None)
        if applicant_id and category:
            self.add_item(AcceptButton(applicant_id, category))
            self.add_item(RejectButton(applicant_id, category))
        else:
            self.add_item(CategorySelect())

class CategorySelect(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="Moderator", description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", emoji="üõ°Ô∏è"),
            discord.SelectOption(label="Support", description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞", emoji="üõü"),
            discord.SelectOption(label="Eventer", description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–≤–µ–Ω—Ç–µ—Ä–∞", emoji="üéÆ")
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å", options=options, custom_id="category_select")

    async def callback(self, interaction: discord.Interaction):
        modal = ApplicationModal(self.values[0])  # –ü–µ—Ä–µ–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await interaction.response.send_modal(modal)

class ApplicationModal(discord.ui.Modal):
    def __init__(self, category):
        """–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏."""
        super().__init__(title=f"–ó–∞—è–≤–∫–∞ –Ω–∞ {category}")
        self.category = category
        self.add_item(discord.ui.TextInput(label="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç", placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç", required=True))
        self.add_item(discord.ui.TextInput(label="–í–∞—à –æ–ø—ã—Ç", placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç", required=True))

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏."""
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫
        set_channel_cog = interaction.client.get_cog("SetChannelCog")
        if not set_channel_cog:
            await interaction.response.send_message("‚ö†Ô∏è –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!", ephemeral=True)
            return

        applications_channel = set_channel_cog.get_applications_channel(interaction.guild)
        if not applications_channel:
            await interaction.response.send_message("‚ö†Ô∏è –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", ephemeral=True)
            return

        # –°–æ–∑–¥–∞—ë–º embed —Å –∑–∞—è–≤–∫–æ–π
        embed = discord.Embed(
            title=f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ {self.category}",
            description=f"–û—Ç: {interaction.user.mention} ({interaction.user.id})",
            color=0x00ff00
        )
        embed.add_field(name="–í–æ–∑—Ä–∞—Å—Ç", value=self.children[0].value, inline=False)
        embed.add_field(name="–û–ø—ã—Ç", value=self.children[1].value, inline=False)
        embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        view = StaffApplicationView(applicant_id=interaction.user.id, category=self.category)
        await applications_channel.send(embed=embed, view=view)
        await interaction.response.send_message("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", ephemeral=True)

class AcceptButton(discord.ui.Button):
    def __init__(self, applicant_id, category):
        super().__init__(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success, emoji="‚úÖ", custom_id=f"accept_{applicant_id}_{category}")
        self.applicant_id = applicant_id
        self.category = category

    async def callback(self, interaction: discord.Interaction):
        """–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É."""
        guild = interaction.guild
        member = guild.get_member(self.applicant_id)

        if not member:
            await interaction.response.send_message("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        roles = [guild.get_role(role_id) for role_id in ROLE_IDS[self.category] if guild.get_role(role_id)]
        await member.add_roles(*roles)
        embed = discord.Embed(
    title="‚úÖ –ó–∞—è–≤–∫–∞ –ü—Ä–∏–Ω—è—Ç–∞",
    description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é **{self.category}** –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞.",
    color=discord.Color.green()  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –æ—à–∏–±–∫–∏/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        )

        await member.send(embed=embed)
        await interaction.response.send_message(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø—Ä–∏–Ω—è—Ç.", ephemeral=True)

class RejectButton(discord.ui.Button):
    def __init__(self, applicant_id, category):
        super().__init__(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, emoji="‚ùå", custom_id=f"reject_{applicant_id}_{category}")
        self.applicant_id = applicant_id
        self.category = category

    async def callback(self, interaction: discord.Interaction):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É."""
        guild = interaction.guild
        member = guild.get_member(self.applicant_id)

        if not member:
            await interaction.response.send_message("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        embed = discord.Embed(
    title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
    description=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∑–∏—Ü–∏—é **{self.category}** –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
    color=discord.Color.red()  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –æ—à–∏–±–∫–∏/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    )

        await member.send(embed=embed)
        await interaction.response.send_message(f"‚ùå –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.", ephemeral=True)