import discord
from discord.ext import commands
from discord import app_commands
from utils.file_utils import load_data, save_data
from datetime import datetime, timedelta

# IDs for roles and report channel
STAFF_ROLE_ID = 1358087527096913980
MUTE_ROLE_ID = 1358864989020094717
REPORT_CHANNEL_ID = 1359753956481564682

# Load punishment data from JSON file
punishments_data = load_data("punishments_data.json")

def parse_duration(duration_str: str):
    """Parse a duration string (e.g., '1d', '1month', '1min') into timedelta."""
    duration_str = duration_str.lower()
    if duration_str.endswith("d"):
        return timedelta(days=int(duration_str[:-1]))
    elif duration_str.endswith("month"):
        return timedelta(days=int(duration_str[:-5]) * 30)
    elif duration_str.endswith("min"):
        return timedelta(minutes=int(duration_str[:-3]))
    else:
        raise ValueError("Invalid time format. Use '1d', '1month', '1min'.")

class PunishmentModal(discord.ui.Modal):
    def __init__(self, user: discord.Member, action: str):
        super().__init__(title=f"{action.capitalize()} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.user = user
        self.action = action
        self.add_item(discord.ui.TextInput(label="–ü—Ä–∏—á–∏–Ω–∞", placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É", required=True))
        self.add_item(discord.ui.TextInput(label="–í—Ä–µ–º—è", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1–¥, 1–º–µ—Å, 1–º–∏–Ω", required=True))

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞"""
        try:
            reason = self.children[0].value
            duration_str = self.children[1].value
            duration = parse_duration(duration_str)
            end_time = datetime.utcnow() + duration

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤ –∫–∞–Ω–∞–ª
            report_channel = interaction.guild.get_channel(REPORT_CHANNEL_ID)
            if not report_channel:
                await interaction.response.send_message(embed=self.create_embed("‚ö†Ô∏è –û—à–∏–±–∫–∞", "–ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.", discord.Color.orange()), ephemeral=True)
                return

            if self.action == "–º—É—Ç":
                # –í—ã–¥–∞—Ç—å –º—É—Ç
                mute_role = interaction.guild.get_role(MUTE_ROLE_ID)
                if mute_role not in self.user.roles:
                    await self.user.add_roles(mute_role, reason=f"{reason} (–ø–æ —Ä–µ—à–µ–Ω–∏—é {interaction.user})")
                    await report_channel.send(embed=self.create_embed(
                        "üîá –ú—É—Ç –≤—ã–¥–∞–Ω",
                        f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.user.mention}\n**–í—Ä–µ–º—è:** {duration_str}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {interaction.user.mention}",
                        discord.Color.red()
                    ))
                    punishments_data.setdefault(self.user.id, {"mutes": 0, "warns": 0, "bans": 0})
                    punishments_data[self.user.id]["mutes"] += 1
                    await interaction.response.send_message(embed=self.create_embed(
                        "‚úÖ –£—Å–ø–µ—Ö",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.user.mention} –±—ã–ª –≤—ã–¥–∞–Ω –º—É—Ç –Ω–∞ {duration_str}. –ü—Ä–∏—á–∏–Ω–∞: {reason}.",
                        discord.Color.green()
                    ), ephemeral=True)
                else:
                    await interaction.response.send_message(embed=self.create_embed(
                        "‚ö†Ô∏è –û—à–∏–±–∫–∞",
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user.mention} —É–∂–µ –∏–º–µ–µ—Ç –º—É—Ç.",
                        discord.Color.orange()
                    ), ephemeral=True)

            elif self.action == "–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ":
                # –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                punishments_data.setdefault(self.user.id, {"mutes": 0, "warns": 0, "bans": 0})
                punishments_data[self.user.id]["warns"] += 1

                await report_channel.send(embed=self.create_embed(
                    "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ",
                    f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.user.mention}\n**–í—Ä–µ–º—è:** {duration_str}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—ã–¥–∞–ª:** {interaction.user.mention}",
                    discord.Color.gold()
                ))
                await interaction.response.send_message(embed=self.create_embed(
                    "‚úÖ –£—Å–ø–µ—Ö",
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.user.mention} –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}.",
                    discord.Color.green()
                ), ephemeral=True)

        except ValueError:
            await interaction.response.send_message(embed=self.create_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: '1–¥', '1–º–µ—Å', '1–º–∏–Ω').",
                discord.Color.red()
            ), ephemeral=True)

    def create_embed(self, title, description, color):
        """–°–æ–∑–¥–∞—ë—Ç Embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        embed = discord.Embed(title=title, description=description, color=color)
        embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏", icon_url="https://cdn-icons-png.flaticon.com/512/1827/1827504.png")
        embed.timestamp = datetime.utcnow()
        return embed


class StaffPanelView(discord.ui.View):
    def __init__(self, member: discord.Member, author: discord.Member):
        super().__init__(timeout=None)
        self.member = member
        self.author = author
        self.add_item(MuteButton(member))
        self.add_item(WarnButton(member))
        self.add_item(RemoveMuteButton(member))
        self.add_item(RemoveWarnButton(member))

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏"""
        if interaction.user != self.author:
            await interaction.response.send_message(embed=self.create_embed(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –ø–∞–Ω–µ–ª—å.",
                discord.Color.red()
            ), ephemeral=True)
            return False
        return True

    def create_embed(self, title, description, color):
        """–°–æ–∑–¥–∞—ë—Ç Embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        embed = discord.Embed(title=title, description=description, color=color)
        embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏", icon_url="https://cdn-icons-png.flaticon.com/512/1827/1827504.png")
        embed.timestamp = datetime.utcnow()
        return embed


class MuteButton(discord.ui.Button):
    def __init__(self, member: discord.Member):
        super().__init__(label="–í—ã–¥–∞—Ç—å –º—É—Ç", style=discord.ButtonStyle.secondary, emoji="üîá")
        self.member = member

    async def callback(self, interaction: discord.Interaction):
        modal = PunishmentModal(self.member, action="–º—É—Ç")
        await interaction.response.send_modal(modal)


class WarnButton(discord.ui.Button):
    def __init__(self, member: discord.Member):
        super().__init__(label="–î–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=discord.ButtonStyle.primary, emoji="‚ö†Ô∏è")
        self.member = member

    async def callback(self, interaction: discord.Interaction):
        modal = PunishmentModal(self.member, action="–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
        await interaction.response.send_modal(modal)


class RemoveMuteButton(discord.ui.Button):
    def __init__(self, member: discord.Member):
        super().__init__(label="–°–Ω—è—Ç—å –º—É—Ç", style=discord.ButtonStyle.success, emoji="‚úÖ")
        self.member = member

    async def callback(self, interaction: discord.Interaction):
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞ –∏ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤
        mute_role = interaction.guild.get_role(MUTE_ROLE_ID)
        report_channel = interaction.guild.get_channel(REPORT_CHANNEL_ID)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å –º—É—Ç–∞
        if mute_role and mute_role in self.member.roles:
            # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å –º—É—Ç–∞
            await self.member.remove_roles(mute_role, reason=f"–°–Ω—è—Ç–∏–µ –º—É—Ç–∞ –ø–æ —Ä–µ—à–µ–Ω–∏—é {interaction.user}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç –≤ –∫–∞–Ω–∞–ª
            if report_channel:
                await report_channel.send(embed=self.create_embed(
                    "‚úÖ –ú—É—Ç —Å–Ω—è—Ç",
                    f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.member.mention}\n**–°–Ω—è–ª:** {interaction.user.mention}",
                    discord.Color.green()
                ))
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞
            await interaction.response.send_message(embed=self.create_embed(
                "‚úÖ –£—Å–ø–µ—Ö",
                f"–ú—É—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} —Å–Ω—è—Ç.",
                discord.Color.green()
            ), ephemeral=True)
        else:
            # –ï—Å–ª–∏ —Ä–æ–ª–∏ –º—É—Ç–∞ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await interaction.response.send_message(embed=self.create_embed(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞",
                f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} –Ω–µ—Ç —Ä–æ–ª–∏ –º—É—Ç–∞.",
                discord.Color.orange()
            ), ephemeral=True)

    def create_embed(self, title, description, color):
        """–°–æ–∑–¥–∞—ë—Ç Embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        embed = discord.Embed(title=title, description=description, color=color)
        embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏", icon_url="https://cdn-icons-png.flaticon.com/512/1827/1827504.png")
        embed.timestamp = datetime.utcnow()
        return embed

class RemoveWarnButton(discord.ui.Button):
    def __init__(self, member: discord.Member):
        super().__init__(label="–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", style=discord.ButtonStyle.danger, emoji="‚ùå")
        self.member = member

    async def callback(self, interaction: discord.Interaction):
        report_channel = interaction.guild.get_channel(REPORT_CHANNEL_ID)

        if punishments_data.get(self.member.id, {}).get("warns", 0) > 0:
            punishments_data[self.member.id]["warns"] -= 1
            await report_channel.send(embed=self.create_embed(
                "‚ùå –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å–Ω—è—Ç–æ",
                f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.member.mention}\n**–°–Ω—è–ª:** {interaction.user.mention}",
                discord.Color.green()
            ))
            await interaction.response.send_message(embed=self.create_embed(
                "‚úÖ –£—Å–ø–µ—Ö",
                f"–û–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ.",
                discord.Color.green()
            ), ephemeral=True)
        else:
            await interaction.response.send_message(embed=self.create_embed(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞",
                f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.member.mention} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.",
                discord.Color.orange()
            ), ephemeral=True)

    def create_embed(self, title, description, color):
        """–°–æ–∑–¥–∞—ë—Ç Embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        embed = discord.Embed(title=title, description=description, color=color)
        embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏", icon_url="https://cdn-icons-png.flaticon.com/512/1827/1827504.png")
        embed.timestamp = datetime.utcnow()
        return embed


class StaffPanelCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="staffpanel", description="–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.")
    @app_commands.describe(member="–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
    async def staffpanel(self, interaction: discord.Interaction, member: discord.Member):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º."""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if STAFF_ROLE_ID not in [role.id for role in interaction.user.roles]:
            await interaction.response.send_message(embed=self.create_embed(
                "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                discord.Color.red()
            ), ephemeral=True)
            return

        # –°–æ–∑–¥–∞—ë–º Embed —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ
        user_punishments = punishments_data.get(member.id, {"mutes": 0, "warns": 0, "bans": 0})
        embed = discord.Embed(
            title="Staff Panel",
            description=f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {member.mention}",
            color=discord.Color.blue()
        )
        embed.set_thumbnail(url=member.avatar.url if member.avatar else None)
        embed.add_field(name="ID –£—á–∞—Å—Ç–Ω–∏–∫–∞", value=member.id, inline=True)
        embed.add_field(name="–ò–º—è", value=member.name, inline=True)
        embed.add_field(
            name="–î–∞—Ç–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
            value=member.joined_at.strftime("%Y-%m-%d") if member.joined_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            inline=True
        )
        embed.add_field(name="–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏–π", value=(
            f"–ú—É—Ç–æ–≤: {user_punishments['mutes']}\n"
            f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {user_punishments['warns']}\n"
            f"–ë–∞–Ω–æ–≤: {user_punishments['bans']}"
        ), inline=False)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Embed —Å –∫–Ω–æ–ø–∫–∞–º–∏
        view = StaffPanelView(member, interaction.user)
        await interaction.response.send_message(embed=embed, view=view)

    def create_embed(self, title, description, color):
        """–°–æ–∑–¥–∞—ë—Ç Embed –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π."""
        embed = discord.Embed(title=title, description=description, color=color)
        embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è–º–∏", icon_url="https://cdn-icons-png.flaticon.com/512/1827/1827504.png")
        embed.timestamp = datetime.utcnow()
        return embed


async def setup(bot):
    await bot.add_cog(StaffPanelCog(bot))